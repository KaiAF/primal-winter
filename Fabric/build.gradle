plugins {
    id "idea"
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "io.github.juuxel.loom-quiltflower" version "1.7.2"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

def envVersion = System.getenv("VERSION")
version = envVersion == null ? "0.0.0-indev" : envVersion
archivesBaseName = "${mod_id}-fabric-${minecraft_version}"

configurations {
    shadowLibrary
    implementation.extendsFrom(shadowLibrary)
}

repositories {
    maven {
        url = "https://alcatrazescapee.jfrog.io/artifactory/mods"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    shadowLibrary "com.alcatrazescapee:epsilon:${epsilon_version}"

    implementation project(":Common")
    implementation "org.jetbrains:annotations:23.0.0"
}

loom {
    mixin.defaultRefmapName = "${mod_id}.refmap.json"

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

processResources {
    from project(":Common").sourceSets.main.resources

    filesMatching("fabric.mod.json") {
        expand project.properties
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

jar {
    classifier "slim"
    from("LICENSE") {
        rename { "${it}_${mod_name}" }
    }
}

shadowJar {
    from sourceSets.main.output
    configurations = [project.configurations.shadowLibrary]
    dependencies {
        exclude(dependency { it.moduleGroup != "com.alcatrazescapee" })
    }
    relocate "com.alcatrazescapee.epsilon", "com.alcatrazescapee.notreepunching.epsilon"
}

remapJar {
    dependsOn shadowJar
    inputFile.set(shadowJar.archiveFile)
}
